[project]
name = "yop-mcp"
version = "0.1.1"
description = "快速对接易宝支付开放平台(YOP)的 MCP Server"
readme = "README.md"
requires-python = ">=3.13"
license = { text = "Apache-2.0" }
authors = [
    { name = "YOP Team", email = "yop@yeepay.com" }
]
maintainers = [
    { name = "YOP Team", email = "yop@yeepay.com" }
]
keywords = ["yop", "yeepay", "mcp", "payment", "api"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Office/Business :: Financial :: Point-Of-Sale",
]
dependencies = [
    "httpx[http2]>=0.28.1",
    "mcp[cli]>=1.6.0",
    "gmssl>=3.2.2",
    "cryptography>=42.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "pylint>=3.3.0",
    "pre-commit>=3.6.0",
    "bandit>=1.7.5",
    "safety>=3.0.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.23.0",
    "httpx>=0.28.1",
]

[project.urls]
Homepage = "https://open.yeepay.com"
Documentation = "https://open.yeepay.com/docs"
Repository = "http://gitlab.yeepay.com/yop/yop-mcp.git"
Issues = "http://gitlab.yeepay.com/yop/yop-mcp/-/issues"
Changelog = "http://gitlab.yeepay.com/yop/yop-mcp/-/blob/main/CHANGELOG.md"

[project.scripts]
yop-mcp = "yop_mcp.main:main"

[project.entry-points."mcp.servers"]
yop-mcp = "yop_mcp.main:mcp"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["tools", "yop_mcp"]

[tool.hatch.build.targets.sdist]
include = [
    "main.py",
    "tools/",
    "yop_mcp/",
    "config/",
    "docs/",
    "tests/",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
    "CONTRIBUTING.md",
    "pyproject.toml",
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["tools", "main"]
omit = ["tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["tools"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false


